import QtQuick 2.9
import QtQuick.Controls 2.2

/**
 * Popup for importing an Account generated by a BIP39 seed. Has to be opened manually.
 * Has the following items:
 * - "curItem": the currently selected item from the Account list
 * - "name" (optional, readonly): the Account's name/label
 * - "pass" (readonly): the Wallet password input
 * - "seed": the 12-word seed input
 * - "doneBtn.onClicked": what to do when confirming the action
 * - "setAccountListData(accList)": fill the list with the generated Accounts
 * - "clean()": helper function to clean up inputs/data
 */

Popup {
  id: importAccountPopup

  readonly property alias curItem: seedList.currentItem
  readonly property alias name: seedName.text
  readonly property alias pass: seedPass.text
  property string seed
  property alias doneBtn: btnDone

  function setAccountListData(accList) {
    for (var i = 0; i < accList.length; i++) {
      accountSeedList.append(JSON.parse(accList[i]))
    }
  }

  function clean() {
    accountSeedList.clear()
    seedName.text = seedPass.text = seed = ""
  }

  width: (window.width / 2) + 200
  height: (window.height / 2) + 300
  x: (width / 2) - 200
  y: (height / 2) - 300
  modal: true
  focus: true
  padding: 0  // Remove white borders
  closePolicy: Popup.NoAutoClose
  background: Rectangle { anchors.fill: parent; color: "#9A4FAD" }

  Column {
    anchors.fill: parent
    spacing: 30
    topPadding: 20

    Text {
      id: infoText
      anchors.horizontalCenter: parent.horizontalCenter
      horizontalAlignment: Text.AlignHCenter
      text: "Choose the Account you want to import."
    }
    
    Rectangle {
      width: importAccountPopup.width - 50
      height: importAccountPopup.height - 300
      anchors.horizontalCenter: parent.horizontalCenter
      radius: 5
      color: "#4458A0C9"

      AVMEAccountSeedList {
        id: seedList
        width: parent.width
        height: parent.height
        anchors.horizontalCenter: parent.horizontalCenter
        model: ListModel { id: accountSeedList }
      }
    }

    AVMEInput {
      id: seedName
      width: (parent.width / 2) - parent.spacing
      anchors.horizontalCenter: parent.horizontalCenter
      label: "Name (optional)"
      placeholder: "Name/label for your Account"
    }

    AVMEInput {
      id: seedPass
      width: (parent.width / 2) - parent.spacing
      anchors.horizontalCenter: parent.horizontalCenter
      echoMode: TextInput.Password
      passwordCharacter: "*"
      label: "Passphrase"
      placeholder: "Your Wallet's passphrase"
    }

    Row {
      id: btnRow
      anchors.horizontalCenter: parent.horizontalCenter
      spacing: 10

      AVMEButton {
        id: btnClose
        text: "Close"
        onClicked: {
          importAccountPopup.clean()
          importAccountPopup.close()
        }
      }
      AVMEButton {
        id: btnDone
        text: "Done"
        enabled: (seedPass.text !== "")
      }
    }
  }
}
